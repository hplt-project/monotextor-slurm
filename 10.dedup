#!/bin/bash
#SBATCH --job-name=dedup
#SBATCH --partition="small"
#SBATCH --time=72:00:00
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=128
#SBATCH --mem-per-cpu=1750
#SBATCH --output=logs/%x.out

set -euo pipefail
shopt -s failglob
source .env

IFS=" " read -ra args <<< $HQ_ENTRY
L=${args[0]}
COLL=${args[1]}
TMPSFX=tmp_$$
INPUT_DIR=$WORKSPACE/$COLL/$L
OUTPUT_DIR=$WORKSPACE/dedup/$COLL/$L
JSON_FILES=`ls -1 $INPUT_DIR/batch_*.jsonl.zst`
mkdir -p $OUTPUT_DIR
echo $JSON_FILES >&2

# Read the split output, compress it to temp, then move
compress-batch(){
    local file=$1
    # Remove 0s prefix
    local name=$(echo $file | sed -E "s/\_0+/_/g")

    # compress stdin, write to a temp
    zstd -T$SLURM_CPUS_ON_NODE -10 >$name.jsonl.zst.tmp

    # remove temp suffix
    mv $name.jsonl.zst.tmp $name.jsonl.zst
}
export -f compress-batch


#CLUSTER_FILES=""
#if [ -f $DIR/clusters.zst ]; then
#    # Single clusters file
#    CLUSTER_FILES=$DIR/clusters.zst
#    dedup $CLUSTER_FILES $JSON_FILES
#    #rm $CLUSTER_FILES
#else
#    # Distributed index, multiple clusters files
#    CLUSTER_FILES=$DIR/clusters.[0-9]*.zst
#    dedup <(cat $CLUSTER_FILES) $JSON_FILES
#    #rm $CLUSTER_FILES
#fi
singularity exec --bind $(pwd -P) --bind $INPUT_DIR --pwd $(pwd -P) monotextor.sif \
    dedup $INPUT_DIR/clusters.zst $JSON_FILES \
| split - \
    --numeric-suffixes=1 -a 8 -C 120G \
    --filter='compress-batch $FILE' \
    $OUTPUT_DIR
