#!/bin/bash
source .env
source .checks
set -euo pipefail

IFS=" " read -ra args <<< $HQ_ENTRY
LANG=${args[0]}
COLL=${args[1]}
INPUT_DIR=$WORKSPACE/dedup/$LANG
OUTPUT_DIR=$WORKSPACE/collections_merged/$LANG
mkdir -p $OUTPUT_DIR

if [ "$COLL" == "global" ]; then
    echo "Dedup is global, just create symlink"
    rm -rf $OUTPUT_DIR
    ln -sfT $INPUT_DIR/global $OUTPUT_DIR
    exit 0
fi

files=`echo $INPUT_DIR/*/batch_*.jsonl.zst | tr ' ' '\n' | grep -v '/global/'`
total_size=`du -bc $files | tail -1 | cut -f1`
echo "'$LANG' files: $files"
echo "Total $LANG size: $(echo $total_size | numfmt --to=iec)"

rm -f $OUTPUT_DIR/*
touch $OUTPUT_DIR/unfinished
cum_size=0
num=0
for f in $files
do
    size=`du $f | tail -1 | cut -f1`
    if [[ $((size+cum_size)) -gt 20000000 ]] || [[ $num -eq 0 ]];
    then
        num=$((num+1))
        cum_size=0
        out=$OUTPUT_DIR/batch_$num.jsonl.zst
        echo "New batch $out, copying.."
        cp $f $out
        continue
    fi
    echo "Concat file $f to $out"
    cat $f >>$out
    cum_size=$((cum_size+size))
done
rm $OUTPUT_DIR/unfinished
rm -r $INPUT_DIR
sync # wait untill all has been copied, so the final size matches
echo "Final $LANG total size: $(du -ch $OUTPUT_DIR/batch_*.jsonl.zst | tail -1 | cut -f1)"
